{"mappings":"ACEkB,SAAS,cAAc,CAAC,gBAC1C,MAAM,EAAW,SAAS,cAAc,CAAC,QACb,SAAS,cAAc,CAAC,gBAGpD,MAAM,EAAa,UACjB,GAAI,CAIF,GAAI,CAAC,IAAI,EAAE,CAAE,MAAM,AAAI,MAAM,CAAC,4BAA4B,EAAE,IAAI,MAAM,CAAC,CAAC,EAExE,OADa,MAAM,IAAI,IAAI,EAE7B,CAAE,MAAO,EAAG,CACV,QAAQ,IAAI,CAAC,uDAAwD,GACrE,GAAI,CAEF,IAAM,EAAM,MAAM,MAlBF,gCAmBhB,GAAI,CAAC,EAAI,EAAE,CAAE,MAAM,AAAI,MAAM,CAAC,2BAA2B,EAAE,EAAI,MAAM,CAAC,CAAC,EAEvE,OADa,MAAM,EAAI,IAAI,EAE7B,CAAE,MAAO,EAAO,CAGd,OAFA,MAAM,+CACN,QAAQ,KAAK,CAAC,GACP,EAAE,AACX,CACF,CACF,EAEC,AAAA,CAAA,UAGC,QAAQ,GAAG,CAFE,MAAM,IAGrB,CAAA,IAIA,MAAM,EAAe,AAAC,IACpB,EAAS,SAAS,CAAG,GACrB,IAAM,EAAc,EAAK,OAAO,EAAE,cAAgB,eAC5C,EAAkB,SAAS,aAAa,CAAC,OAC/C,EAAgB,YAAY,CAAC,QAAS,QACtC,EAAgB,SAAS,CAAG,CAAC;QACvB,EAAE,EAAY;EACpB,CAAC,CACD,EAAS,WAAW,CAAC,EACvB,EAGM,EAAkB,AAAC,IACvB,IAAM,EAAgB,SAAS,aAAa,CAAC,kBAC7C,CAAA,EAAc,SAAS,CAAG,GAGzB,AAAA,CAAA,EAAK,OAAO,CAAC,KAAK,EAAI,EAAC,AAAD,EAAI,OAAO,CAAC,AAAC,IAElC,IAAM,EAAgB,SAAS,aAAa,CAAC,OAC7C,EAAc,YAAY,CAAC,QAAS,aAEpC,IAAM,EAAgB,SAAS,aAAa,CAAC,OAC7C,EAAc,YAAY,CAAC,QAAS,mBAEpC,IAAM,EAAgB,SAAS,aAAa,CAAC,OAC7C,EAAc,YAAY,CAAC,QAAS,mBACpC,EAAc,SAAS,CAAG,CAAC;gBACf,EAAE,EAAK,UAAU,EAAI,SAAS;IAC1C,CAAC,CAED,IAAM,EAAe,SAAS,aAAa,CAAC,OAC5C,EAAa,YAAY,CAAC,QAAS,kBACnC,EAAa,SAAS,CAAG,CAAC;UACpB,EAAE,EAAK,KAAK,CAAC;oBACH,EAAE,EAAK,SAAS,CAAC;uBACd,EAAE,EAAK,MAAM,EAAI,GAAG;;sBAErB,EAAE,EAAK,WAAW,EAAI,2BAA2B;IACnE,CAAC,CAGD,EAAc,WAAW,CAAC,GAC1B,EAAc,WAAW,CAAC,GAE1B,EAAc,WAAW,CAAC,GAE1B,EAAc,WAAW,CAAC,EAC5B,EACF,EAGC,AAAA,CAAA,UACC,IAAM,EAAO,MAAM,IACnB,EAAa,GACb,EAAgB,EAClB,CAAA","sources":["<anon>","src/hardcover_script.js"],"sourcesContent":["const API_Url_Remote = \"https://api.nytimes.com/svc/books/v3/lists/current/hardcover-fiction.json?api-key=z9vMI8z1dlIkcPAYT255wqx6jrHy86Kh\";\nconst API_Url_Local = \"./Api/Hardcover_fiction.json\";\nconst TopHeader = document.getElementById(\"best-sellers\");\nconst MainLogo = document.getElementById(\"logo\");\nconst ContentDescriptions = document.getElementById(\"descriptions\");\nconst GETalldata = async ()=>{\n    try {\n        // const res = await fetch(API_Url_Remote);\n        if (!res.ok) throw new Error(`Error fetching from remote: ${res.status}`);\n        const data = await res.json();\n        return data;\n    } catch (e) {\n        console.warn(\"Fetching remote data failed, switching to local data\", e);\n        try {\n            const res1 = await fetch(API_Url_Local);\n            if (!res1.ok) throw new Error(`Error fetching from local: ${res1.status}`);\n            const data = await res1.json();\n            return data;\n        } catch (error) {\n            alert(\"An error occurred while fetching local data\");\n            console.error(error);\n            return [];\n        }\n    }\n};\n(async ()=>{\n    const data = await GETalldata();\n    console.log(data);\n})();\n// Update Navbar with Logo\nconst updateNAVBAR = (data)=>{\n    MainLogo.innerHTML = \"\";\n    const displayName = data.results?.display_name || \"Unnamed Site\";\n    const headerContainer = document.createElement(\"nav\");\n    headerContainer.setAttribute(\"class\", \"logo\");\n    headerContainer.innerHTML = `\r\n    <h1>${displayName}</h1>\r\n  `;\n    MainLogo.appendChild(headerContainer);\n};\n// Update Book Cards\nconst updateContainer = (data)=>{\n    const cardContainer = document.querySelector(\".card-container\");\n    cardContainer.innerHTML = \"\";\n    // Access the 'books' array inside 'results'\n    (data.results.books || []).forEach((book)=>{\n        const bookContainer = document.createElement(\"div\");\n        bookContainer.setAttribute(\"class\", \"flip-card\");\n        const flipCardInner = document.createElement(\"div\");\n        flipCardInner.setAttribute(\"class\", \"flip-card-inner\");\n        const flipCardFront = document.createElement(\"div\");\n        flipCardFront.setAttribute(\"class\", \"flip-card-front\");\n        flipCardFront.innerHTML = `\r\n      <img src=\"${book.book_image || \"no img\"}\" >\r\n    `;\n        const flipCardBack = document.createElement(\"div\");\n        flipCardBack.setAttribute(\"class\", \"flip-card-back\");\n        flipCardBack.innerHTML = `\r\n      <h2>${book.title}</h2>\r\n      <p>Publisher: ${book.publisher}</p>\r\n      <h2>Book Author: ${book.author || \"\"}</h2>\r\n      \r\n      <p>Description: ${book.description || \"No description available\"}</p>\r\n    `;\n        flipCardInner.appendChild(flipCardFront);\n        flipCardInner.appendChild(flipCardBack);\n        bookContainer.appendChild(flipCardInner);\n        cardContainer.appendChild(bookContainer);\n    });\n};\n(async ()=>{\n    const data = await GETalldata();\n    updateNAVBAR(data);\n    updateContainer(data);\n})();\n\n//# sourceMappingURL=index.2f2321c0.js.map\n","const API_Url_Remote = 'https://api.nytimes.com/svc/books/v3/lists/current/hardcover-fiction.json?api-key=z9vMI8z1dlIkcPAYT255wqx6jrHy86Kh';\r\nconst API_Url_Local = './Api/Hardcover_fiction.json';\r\nconst TopHeader = document.getElementById('best-sellers');\r\nconst MainLogo = document.getElementById('logo');\r\nconst ContentDescriptions = document.getElementById('descriptions');\r\n\r\n\r\nconst GETalldata = async () => {\r\n  try {\r\n\r\n    // const res = await fetch(API_Url_Remote);\r\n\r\n    if (!res.ok) throw new Error(`Error fetching from remote: ${res.status}`);\r\n    const data = await res.json();\r\n    return data;\r\n  } catch (e) {\r\n    console.warn('Fetching remote data failed, switching to local data', e);\r\n    try {\r\n      \r\n      const res = await fetch(API_Url_Local);\r\n      if (!res.ok) throw new Error(`Error fetching from local: ${res.status}`);\r\n      const data = await res.json();\r\n      return data;\r\n    } catch (error) {\r\n      alert('An error occurred while fetching local data');\r\n      console.error(error);\r\n      return [];\r\n    }\r\n  }\r\n};\r\n\r\n(async () => {\r\n  const data = await GETalldata();\r\n\r\n  console.log(data);\r\n})();\r\n\r\n\r\n// Update Navbar with Logo\r\nconst updateNAVBAR = (data) => { \r\n  MainLogo.innerHTML = ''; \r\n  const displayName = data.results?.display_name || 'Unnamed Site';\r\n  const headerContainer = document.createElement('nav');\r\n  headerContainer.setAttribute('class', 'logo');\r\n  headerContainer.innerHTML = `\r\n    <h1>${displayName}</h1>\r\n  `;\r\n  MainLogo.appendChild(headerContainer);\r\n};\r\n\r\n// Update Book Cards\r\nconst updateContainer = (data) => {\r\n  const cardContainer = document.querySelector('.card-container');\r\n  cardContainer.innerHTML = ''; \r\n\r\n  // Access the 'books' array inside 'results'\r\n  (data.results.books || []).forEach((book) => {\r\n   \r\n    const bookContainer = document.createElement('div');\r\n    bookContainer.setAttribute('class', 'flip-card');\r\n\r\n    const flipCardInner = document.createElement('div');\r\n    flipCardInner.setAttribute('class', 'flip-card-inner');\r\n\r\n    const flipCardFront = document.createElement('div');\r\n    flipCardFront.setAttribute('class', 'flip-card-front');\r\n    flipCardFront.innerHTML = `\r\n      <img src=\"${book.book_image || 'no img'}\" >\r\n    `;\r\n\r\n    const flipCardBack = document.createElement('div');\r\n    flipCardBack.setAttribute('class', 'flip-card-back');\r\n    flipCardBack.innerHTML = `\r\n      <h2>${book.title}</h2>\r\n      <p>Publisher: ${book.publisher}</p>\r\n      <h2>Book Author: ${book.author || ''}</h2>\r\n      \r\n      <p>Description: ${book.description || 'No description available'}</p>\r\n    `;\r\n\r\n\r\n    flipCardInner.appendChild(flipCardFront);\r\n    flipCardInner.appendChild(flipCardBack);\r\n\r\n    bookContainer.appendChild(flipCardInner);\r\n\r\n    cardContainer.appendChild(bookContainer);\r\n  });\r\n};\r\n\r\n\r\n(async () => {\r\n  const data = await GETalldata(); \r\n  updateNAVBAR(data);              \r\n  updateContainer(data);           \r\n})();\r\n"],"names":["document","getElementById","MainLogo","GETalldata","res","ok","Error","status","json","e","console","warn","res1","fetch","error","alert","log","updateNAVBAR","data","innerHTML","displayName","results","display_name","headerContainer","createElement","setAttribute","appendChild","updateContainer","cardContainer","querySelector","books","forEach","book","bookContainer","flipCardInner","flipCardFront","book_image","flipCardBack","title","publisher","author","description"],"version":3,"file":"index.2f2321c0.js.map"}